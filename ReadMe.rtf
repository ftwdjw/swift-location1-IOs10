{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red180\green0\blue98;\red77\green0\blue158;\red29\green133\blue25;
\red68\green137\blue147;\red92\green38\blue153;\red46\green13\blue110;\red186\green0\blue17;\red0\green11\blue255;
}
\margl720\margr720\margb720\margt720\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 location1Swift\
uses swift to generate a map with location with debug notes\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf0 So the first thing you need to do is to add one or both of the following keys to your Info.plist file: NSLocationWhenInUseUsageDescription \
NSLocationAlwaysUsageDescription\
\
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0

\f2 \cf2 \CocoaLigature0 import\cf0  UIKit\
\cf2 import\cf0  MapKit\
\cf2 import\cf0  CoreLocation\
\
, \cf3 MKMapViewDelegate\cf0 ,\
    \cf3 CLLocationManagerDelegate\
\
\cf0     \cf2 @IBOutlet\cf0  \cf2 var\cf0  mapView: \cf3 MKMapView\cf0 !\
    \cf4 //outlet at the beginning\cf3 \
\
\
\cf0    \cf2 let\cf0  locationManager = \cf3 CLLocationManager\cf0 ()\
    \cf4 //initialize location manager\cf3 \
\
\
view did load\
\
\cf2 self\cf0 .\cf5 locationManager\cf0 .\cf6 delegate\cf0  = \cf2 self\cf0 \
        \cf2 self\cf0 .\cf5 locationManager\cf0 .\cf6 desiredAccuracy\cf0  = \cf6 kCLLocationAccuracyBest\cf0 \
        \cf2 self\cf0 .\cf5 locationManager\cf0 .\cf7 requestWhenInUseAuthorization\cf0 ()\
        \
        \cf7 print\cf0 (\cf8 "request authorization"\cf0 )\
        \
        \cf2 self\cf0 .\cf5 locationManager\cf0 .\cf7 startUpdatingLocation\cf0 ()\
        \
        \cf7 print\cf0 (\cf8 "start updating location"\cf0 )\
        \
        \cf2 self\cf0 .\cf5 mapView\cf0 .\cf6 showsUserLocation\cf0  = \cf2 true\
\
\
func\cf0  locationManager(manager: \cf3 CLLocationManager\cf0 , didUpdateLocations\
        locations: [\cf3 CLLocation\cf0 ])\
    \{\
        \cf2 let\cf0  location = locations.\cf6 last\cf0 \
        \
        \cf7 print\cf0 (\cf8 "update last location"\cf0 )\
        \
        \cf2 let\cf0  center = \cf6 CLLocationCoordinate2D\cf0 (latitude: location!.\cf6 coordinate\cf0 .\cf6 latitude\cf0 , longitude: location!.\cf6 coordinate\cf0 .\cf6 longitude\cf0 )\
        \cf2 let\cf0  region = \cf6 MKCoordinateRegion\cf0 (center: center, span: \cf6 MKCoordinateSpan\cf0 (latitudeDelta: \cf9 0.01\cf0 , longitudeDelta: \cf9 0.01\cf0 ))\
        \
        \cf2 self\cf0 .\cf5 mapView\cf0 .\cf7 setRegion\cf0 (region, animated: \cf2 true\cf0 )\
        \
        \cf2 self\cf0 .\cf5 locationManager\cf0 .\cf7 stopUpdatingLocation\cf0 ()\
    \}\
    \
    \cf2 func\cf0  locationManager(manager: \cf3 CLLocationManager\cf0 , didFailWithError error:\cf3 NSError\cf0 )\
    \{\
        \cf7 print\cf0 (\cf8 "Error: "\cf0  + error.\cf6 localizedDescription\cf0 )\
    \}\
\
\cf2 \
\
\
\
\
\cf0 \
}